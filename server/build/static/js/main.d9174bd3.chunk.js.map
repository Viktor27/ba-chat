{"version":3,"sources":["components/Message/Message.js","components/Send/Send.js","components/Chat/Chat.js","index.js"],"names":["Message","_ref","item","react_default","a","createElement","className","user","text","Send","value","onChange","onSend","onSubmit","type","Chat","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setListeners","socket","io","on","emit","state","currentUser","data","isLogin","addMessage","addUsers","changeMessage","event","setState","inputMsg","target","validName","inputName","div","current","users","_ref2","messages","concat","toConsumableArray","name","message","sendMessage","preventDefault","_this$state","trim","length","React","createRef","_this$state2","react","map","key","components_Message_Message","components_Send_Send","User_default","ref","defaultValue","onClick","Component","ReactDOM","render","components_Chat_Chat","document","getElementById"],"mappings":"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","file":"static/js/main.d9174bd3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Message.css\";\r\n\r\nconst Message = ({item}) => (\r\n  <div className=\"message-container\">\r\n    <span className=\"message\">{item.user}</span>\r\n    <span className=\"message end\">{item.text}</span>\r\n  </div>\r\n)\r\nexport default Message;","import React from \"react\";\r\nimport \"./Send.css\";\r\n\r\nconst Send = ({value, onChange, onSend}) => (\r\n  <form onSubmit={onSend} className=\"send-block\">\r\n    <input value={value} onChange={onChange} className=\"input-message\"/>\r\n    <button type=\"submit\" className=\"send\">Send</button>\r\n  </form>\r\n)\r\n\r\nexport default Send;","import React, { Component, Fragment } from 'react';\r\nimport Message from '../Message';\r\nimport Send from '../Send';\r\nimport User from '../User';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\n\r\nclass Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.div = React.createRef();\r\n    this.state = {\r\n      currentUser: 'Anonim',\r\n      messages: [],\r\n      inputMsg: '',\r\n      isLogin: false,\r\n      users: {},\r\n    };\r\n    this.socket = null;\r\n  }\r\n  setListeners = () => {\r\n    this.socket = io('localhost:5000');\r\n    this.socket.on('connect', () => {\r\n      this.socket.emit('addUser', this.state.currentUser);\r\n    });\r\n    this.socket.on('message', data => {\r\n      if (this.state.isLogin) this.addMessage(data);\r\n    });\r\n    this.socket.on('updateUsers', data => {\r\n      if (this.state.isLogin) {\r\n        this.addUsers(data);\r\n      }\r\n    });\r\n  };\r\n  changeMessage = event => {\r\n    this.setState({ inputMsg: event.target.value });\r\n  };\r\n  validName = user => {\r\n    return user !== '' && user !== 'Anonim';\r\n  };\r\n  inputName = () => {\r\n    const user = this.div.current.value;\r\n    if (this.validName(user)) {\r\n      this.setState({ currentUser: user, isLogin: true });\r\n      this.setListeners();\r\n    }\r\n  };\r\n  addUsers = data => {\r\n    this.setState(({ users }) => ({\r\n      users: data,\r\n    }));\r\n  };\r\n  addMessage = data => {\r\n    this.setState(({ messages }) => ({\r\n      inputMsg: '',\r\n      messages: [...messages, { user: data.name, text: data.message }],\r\n    }));\r\n  };\r\n  sendMessage = event => {\r\n    event.preventDefault();\r\n    const { currentUser, inputMsg } = this.state;\r\n    if (inputMsg.trim().length) {\r\n      this.socket.emit('message', {\r\n        name: currentUser,\r\n        message: inputMsg,\r\n      });\r\n      this.setState({ inputMsg: '' });\r\n    }\r\n  };\r\n  render() {\r\n    const { messages, inputMsg, currentUser, isLogin, users } = this.state;\r\n    if (!isLogin) {\r\n      return (\r\n        <div className=\"login\">\r\n          <span>Welcome</span>\r\n          <input ref={this.div} defaultValue={currentUser} />\r\n          <button onClick={this.inputName}>Ok</button>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div className=\"chat\">\r\n          <div className=\"message-list\">\r\n            <div className=\"messages\">\r\n              {messages.map((item, key) => (\r\n                <Message item={item} key={key} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <Send\r\n            value={inputMsg}\r\n            onChange={this.changeMessage}\r\n            onSend={this.sendMessage}\r\n          />\r\n        </div>\r\n        <User users={users} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Chat from './components/Chat';\r\n\r\n\r\nReactDOM.render(<Chat />, document.getElementById('root'));\r\n"],"sourceRoot":""}